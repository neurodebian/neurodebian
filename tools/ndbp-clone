#!/bin/sh

# Version of this script
VERSION=1.0

# Start of functions

# Usage

print_version() {
	cat <<EOT
ndbp-clone $VERSION

Copyright: 2024, The NeuroDebian Team <team@neuro.debian.net>
           2024, Vasyl Gello <vasek.gello@gmail.com>


Licensed under GNU Public License version 3 or later.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

EOT
}

print_usage() (
	cat 0<<.a
Usage:
    ndbp-clone [gbp-clone options...]

Clones the remote Git repository containing Debian packaging.

This script is simple wrapper around gbp-clone(1) so all command-line options
from the tool apply to this one as well.

The only notable difference between gbp-clone(1) and neurodebian wrapper is
that ndbp-clone(1) fetches all branches, not only current debian-branch,
upstream-branch and pristine-tar.

This script is part of NeuroDebian tooling available as NeuroDebian package
'neurodebian-dev' or the upstream repository on Github:

<https://github.com/neurodebian/neurodebian>

To use the newest version of NeuroDebian tooling, please point the environment
variable 'NEURODEBIAN_TOOLING_PATH' to it and add the tools to PATH:

export NEURODEBIAN_TOOLING_PATH="\${PWD}"
export PATH="\${NEURODEBIAN_TOOLING_PATH}:\${PATH}"

.a
)

# Start of script

# Parse command-line options

case "${1}" in
-h | --help)
	print_usage
	exit 0
	;;
-v | --version)
	print_version
	exit 0
	;;
esac

# Required tools: sh, gbp

REQUIRED_TOOLS="gbp"

for _TEMP in ${REQUIRED_TOOLS}; do
	if ! command -v "${_TEMP}" 1>/dev/null 2>&1; then
		echo "ERROR: Required tool ${_TEMP} not found!" >&2
		return 1
	fi
done

unset _TEMP

# Add "--all" to gbp-clone options if one is not there

ALL=0
for i in "$@"; do
	if [ "${i}" = "--all" ]; then
		ALL=1
		break
	fi
done

if [ ${ALL} -eq 0 ]; then
	ALL='--all'
fi

# Now try clone

gbp clone "${ALL}" "$@"
